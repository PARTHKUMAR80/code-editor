{"version":3,"sources":["Editor.jsx","App.js","reportWebVitals.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","para","useState","open","setOpen","className","onClick","prevOpen","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","html_open","setHtmlOpen","css_open","setCssOpen","js_open","setJsOpen","ori","setOri","pane_ori","setPane_Ori","space","setSpace","useEffect","timeout","setTimeout","clearTimeout","pre","id","title","sandbox","width","height","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11e9a42b.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nexport default function Editor(props) {\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange,\r\n        para\r\n    } = props\r\n\r\n    const [open,setOpen]=useState(true)\r\n\r\n    function handleChange(editor,data,value){\r\n        onChange(value)\r\n    }\r\n\r\n    function putChar(){\r\n        return '<=/=>'\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${para ? \"closed\" : ''} ${open? '' : \"collapsed\"}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button className=\"left_right\" onClick={()=>setOpen(prevOpen=>!prevOpen)}>{putChar()}</button>\r\n            </div>\r\n            <ControlledEditor\r\n              onBeforeChange={handleChange}\r\n              value={value}\r\n              className=\"code-mirror-wrapper\"\r\n              options={{\r\n                  lineWrapping:true,\r\n                  lint:true,\r\n                  mode:language,\r\n                  theme:\"material\",\r\n                  lineNumbers:true\r\n              }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\nimport Editor from './Editor'\nimport './App.css'\nfunction App(){\n\n  const [html,setHtml]=useState('');\n  const [css,setCss]=useState('');\n  const [js,setJs]=useState('');\n  const [srcDoc,setSrcDoc]=useState('')\n  const [html_open,setHtmlOpen]=useState(false);\n  const [css_open,setCssOpen]=useState(false);\n  const [js_open,setJsOpen]=useState(false);\n  const [ori,setOri]=useState(false);\n  const [pane_ori,setPane_Ori]=useState(false);\n  const [space,setSpace]=useState(false);\n\n  useEffect(()=>{\n    const timeout=setTimeout(()=>{\n      setSrcDoc(`\n        <html>\n        <body>${html}<body/>\n        <style>${css}<style}\n        <script>${js}<script/>\n        </html>\n      `)\n    },500)\n    return ()=>clearTimeout(timeout)\n  },[html,css,js])\n\n  const my_func=()=>{\n    setOri(prev=>!prev)\n    setPane_Ori(prev=>!prev)\n    setSpace(prev=>!prev)\n  }\n\n  return (\n    <>\n      <header>\n        <button onClick={()=>setHtmlOpen(pre=>!pre)} className=\"html\">HTML</button>\n        <button onClick={()=>setCssOpen(pre=>!pre)} className=\"css\">CSS</button>\n        <button onClick={()=>setJsOpen(pre=>!pre)} className=\"js\">JAVASCRIPT</button>\n      </header>\n      <div className={ori ? 'main-container' : ''}>\n        <div className={`top-box box ${pane_ori ? 'box_set' : ''}`}>\n          <Editor\n            language=\"xml\" \n            displayName=\"HTML\" \n            value={html} \n            onChange={setHtml}\n            para={html_open}\n          />\n  \n          <Editor \n            language=\"css\" \n            displayName=\"CSS\" \n            value={css} \n            onChange={setCss}\n            para={css_open}\n          />\n  \n          <Editor \n            language=\"javascript\" \n            displayName=\"JS\" \n            value={js} \n            onChange={setJs}\n            para={js_open}\n          />\n  \n        </div>\n        <div id=\"space\" className=\"box\">\n          <iframe\n            className={`${space ? \"add\" : ''}`} \n            srcDoc={srcDoc}\n            title=\"output\"\n            sandbox=\"allow-scripts\"\n            width=\"100%\"\n            height=\"100%\"\n          />\n        </div>\n      </div>\n      <div className=\"btn-1\">\n        <button onClick={my_func}>Hor/Ver</button>\n      </div>\n    </>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}